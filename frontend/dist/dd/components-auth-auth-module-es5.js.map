{"version":3,"sources":["webpack:///src/app/components/auth/auth-routing.module.ts","webpack:///src/app/components/auth/auth.module.ts","webpack:///src/app/components/auth/login/login.component.ts","webpack:///src/app/components/auth/login/login.component.html","webpack:///src/app/components/auth/signup/signup.component.ts","webpack:///src/app/components/auth/signup/signup.component.html"],"names":["routes","path","component","AuthRoutingModule","forChild","imports","exports","AuthModule","declarations","LoginComponent","AuthServiceService","router","subscription","error","subscribe","err","form","console","log","value","password","email","login","unsubscribe","selector","templateUrl","styleUrls","SignupComponent","username","confirmPassword","signup","res","navigate"],"mappings":"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","file":"components-auth-auth-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\n\n\nconst routes: Routes = [\n  {path:\"\",component:LoginComponent },\n{path:\"signup\",component:SignupComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthRoutingModule { }\n","import { LoginComponent } from './login/login.component';\nimport { NgModule } from '@angular/core';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { SignupComponent } from './signup/signup.component';\nimport {sharedModule}from'../../shared/shared.module'\n\n\n@NgModule({\n  declarations: [SignupComponent,LoginComponent],\n  imports: [\n    AuthRoutingModule,sharedModule\n  ]\n})\nexport class AuthModule { }\n","import { AuthServiceService } from '../auth-service.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit,OnDestroy {\n  subscription: Subscription;\n\n\n  constructor(private AuthServiceService:AuthServiceService,private router:Router) { }\n  ngOnInit(): void {\n    this.subscription =this.AuthServiceService.error.subscribe(err=>this.error=err)\n  }\n\nerror\n  login(form:NgForm){\n    console.log(form.value.password)\n    let email=form.value.email\n    let password=form.value.password\n\nthis.AuthServiceService.login(email,password)}\nngOnDestroy() {\n  this.subscription.unsubscribe();\n}\n  \n}\n\n","<div class=\"container\">\n<form #Form=\"ngForm\" (ngSubmit)=\"login(Form)\">\n    <div class=\"form-group\">\n      <label >Email address</label>\n      <input   ngModel #email=\"ngModel\"  type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"E-mail  \" required email>\n      <div class=\"alert alert-danger\"*ngIf=\"email.touched && email.errors?.required\"> email is required</div>\n      <div class=\"alert alert-danger\"*ngIf=\"email.touched && email.errors?.email\"> Enter a valid email address\n      </div>\n\n     \n    </div>\n    <div class=\"form-group\">\n      <label >Password</label>\n      <input  ngModel #password=\"ngModel\"   type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password \" required>\n      <div class=\"alert alert-danger\"*ngIf=\"password.touched && password.errors?.required\"> password is required</div>\n\n    </div>\n  \n    <button  [disabled]=\"!Form.form.valid\"  type=\"submit\" class=\"btn btn-primary\">login</button>\n \n    <div class=\"sign\">\n      Don't have account ? <a routerLink=\"/auth/signup\">Create Account</a>\n  </div>\n  <p *ngIf=\"error\" class=\"alert alert-danger\"> {{error}}</p>\n  </form></div>","import { AuthServiceService } from './../auth-service.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit,OnDestroy {\n  subscription: Subscription;\n\n  constructor(private AuthServiceService:AuthServiceService,private router:Router) { }\n  error\n  ngOnInit(): void {\n  }\n  signup(form){\n    console.log(form.value.password)\n    let username=form.value.username\n    let email=form.value.email\n\n    let password=form.value.password\n    let confirmPassword=form.value.confirmPassword\n\n    this.subscription =this.AuthServiceService.signup(username,email,password,confirmPassword).subscribe(\n  (res)=>{console.log(res)\n    this.router.navigate(['/auth'])\n},\n(err)=>{console.log(err)\nthis.error=err\n}\n)\n\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n}\n}\n","<div class=\"signup\">\n<div class=\"container text-center\">\n    <h3>Create Account</h3>\n    <form #Form=\"ngForm\" (ngSubmit)=\"signup(Form)\">\n        <input  ngModel type=\"text\" class=\"form-control\" name=\"username\" #username=\"ngModel\" placeholder=\"Username\" required>\n        <div class=\"alert alert-danger\"*ngIf=\"username.touched && username.errors?.required\"> Name is required</div>\n           \n       \n        <input   ngModel #email=\"ngModel\"  type=\"email\" class=\"form-control\" name=\"email\" placeholder=\"E-mail  \" required email>\n        <div class=\"alert alert-danger\"*ngIf=\"email.touched && email.errors?.required\"> email is required</div>\n        <div class=\"alert alert-danger\"*ngIf=\"email.touched && email.errors?.email\"> Enter a valid email address\n        </div>\n\n       \n        <input  ngModel #password=\"ngModel\"   type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password \" required>\n        <div class=\"alert alert-danger\"*ngIf=\"password.touched && password.errors?.required\"> password is required</div>\n\n        <input   ngModel #confirmPassword=\"ngModel\"  type=\"password\" class=\"form-control\" name=\"confirmPassword\" placeholder=\"Confirm Password\" required>\n        <div class=\"alert alert-danger\"*ngIf=\"confirmPassword.touched && confirmPassword.errors?.required\"> confirmPassword is required</div>\n\n        <input   ngModel type=\"submit\" value=\"Create Account\" class=\"btn btn-primary\">\n    </form>\n    \n    <br>\n    \n</div>\n\n</div>"]}