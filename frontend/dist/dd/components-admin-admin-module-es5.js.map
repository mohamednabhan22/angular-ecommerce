{"version":3,"sources":["webpack:///src/app/components/admin/add-product/add-product.component.ts","webpack:///src/app/components/admin/add-product/add-product.component.html","webpack:///src/app/components/admin/admin-routing.module.ts","webpack:///src/app/components/admin/admin.module.ts"],"names":["AddProductComponent","productService","router","fileToUpload","catogries","id","name","form","console","log","value","file","price","description","category","subscription","addProduct","subscribe","res","navigate","err","files","item","unsubscribe","handleFileInput","selector","templateUrl","styleUrls","routes","path","component","addProductRoutingModule","forChild","imports","exports","adminModule","declarations"],"mappings":"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","file":"components-admin-admin-module-es5.js","sourcesContent":["import { productService } from './../../products/products.service';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport {Router} from'@angular/router'\nimport { Subscription } from 'rxjs';\n\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.css']\n})\nexport class AddProductComponent implements OnInit,OnDestroy {\n  subscription: Subscription;\n\n\n  constructor(private productService:productService,private router:Router) { }\n  fileToUpload: File = null;\n\n  catogries:{id:number,name:string}[]=[\n\n    {id:6,name:\"fruit\"},     {id:3,name:\"dairy\"},{id:4,name:\"meat\"}, {id:1,name:\"bakery\"},\n    {id:7,name:\" drinks\"}, {id:2,name:\"takeaway\"},{id:5,name:\"seafood\"}\n    ]\n  ngOnInit(): void {\n\n    \n  }\n  addProduct(form:NgForm){\n    console.log(form.value)\n    console.log(this.fileToUpload)\n\n    let file=this.fileToUpload\n\n    let name=form.value.name\n    let price=form.value.price\n\n    let description=form.value.description\n    let category=form.value.category\n\n    this.subscription=this.productService.addProduct(name,price,description,category,file).subscribe(\n  (res)=>{console.log(res)\n    this.router.navigate(['/products'])\n},\n(err)=>{console.log(err)}\n)\n\n  }\n\n\n  handleFileInput(files: FileList) {\n    this.fileToUpload = files.item(0);\n}\nngOnDestroy() {\n  this.subscription.unsubscribe();\n}\n}\n","\n\n<div style=\"margin-top:200px\" class=\"container text-center product\">\n\n\n    <h3  class=\"my-5\">Add Product</h3>\n    <form   enctype=\"multipart/form-data\"  #Form=\"ngForm\" (ngSubmit)=\"addProduct(Form)\">\n        <input   ngModel #name=\"ngModel\"  type=\"name\" class=\"form-control mb-3\" name=\"name\" placeholder=\"name  \" required >\n      <div class=\"alert alert-danger\"*ngIf=\"name.touched && name.errors?.required\"> name is required</div>\n      \n\n      \n        <input  ngModel #price=\"ngModel\"  type=\"number\" class=\"form-control mb-3\" name=\"price\" placeholder=\"Price\" required>\n        <div class=\"alert alert-danger\"*ngIf=\"price.touched && price.errors?.required\"> price is required</div>\n\n        <textarea ngModel #description=\"ngModel\" type=\"text\" class=\"form-control mb-3\" name=\"description\" placeholder=\"Description\"required></textarea>\n        <div class=\"alert alert-danger\"*ngIf=\"description.touched && description.errors?.required\"> description is required</div>\n\n        <select  ngModel #category=\"ngModel\"   class=\"form-control mb-3\" name=\"category\" required>\n            <option value=\"\" selected>Choose a category</option>\n            <option *ngFor=\"let catogry of catogries\" [value]=\"catogry.name\">{{catogry.name}}</option>\n\n        </select>\n        <div class=\"alert alert-danger\"*ngIf=\"category.touched && category.errors?.required\"> category is required</div>\n\n      \n        <input  (change)=\"handleFileInput($event.target.files)\" ngModel type=\"file\" class=\"form-control\" name=\"img\" placeholder=\"Image\">\n    \n        <input  type=\"submit\" value=\"Add Product\" class=\"btn btn-primary m-5\">\n    </form>\n</div>\n\n","import { AddProductComponent } from './add-product/add-product.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {path:\"\",component:AddProductComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class addProductRoutingModule { }\n","import { sharedModule } from './../../shared/shared.module';\nimport { addProductRoutingModule } from './admin-routing.module';\nimport { NgModule } from '@angular/core';\nimport { AddProductComponent } from './add-product/add-product.component';\n\n\n\n@NgModule({\n  declarations: [AddProductComponent],\n  imports: [\n    sharedModule,\n    addProductRoutingModule\n  ]\n})\nexport class adminModule { }\n"]}